{"version":3,"sources":["components/Feedback/Statistics/Statistic.jsx","components/Feedback/Statistics/Statistics.jsx","components/Feedback/FeedbackOptions/FeedbackOptions.jsx","components/Feedback/Section/Section.jsx","components/Feedback/Feedback.jsx","components/App.js","index.js","components/Feedback/Statistics/Statistics.module.css"],"names":["Statistic","label","value","defaultProps","Statistics","good","neutral","bad","total","positivePercentage","className","styles","list","persents","FeedbackOptions","options","onLeaveFeedback","type","name","onClick","Section","state","countFeedbacks","e","target","setState","prevState","countTotalFeedback","Object","values","reduce","acc","el","countPositiveFeedbackPercentage","toFixed","title","this","props","percentageOfPositiveFeedbacks","Component","Feedback","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"8OAGMA,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OAAsB,sCAAQD,EAAR,aAAkBC,KAE1DF,EAAUG,aAAe,CACvBD,MAAO,GASMF,Q,gBCeAI,EAzBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,oCACE,0CACA,wBAAIC,UAAWC,IAAOC,MACpB,kBAAC,EAAD,CAAWX,MAAM,OAAOC,MAAOG,IAC/B,kBAAC,EAAD,CAAWJ,MAAM,UAAUC,MAAOI,IAClC,kBAAC,EAAD,CAAWL,MAAM,MAAMC,MAAOK,IAC9B,kBAAC,EAAD,CAAWN,MAAM,QAAQC,MAAOM,IAChC,kBAAC,EAAD,CACEP,MAAM,oBACNC,MAAOO,EACPI,UAAQ,OCSDC,EAtBS,SAAC,GAAD,QACtBC,QAAWV,EADW,EACXA,KAAMC,EADK,EACLA,QAASC,EADJ,EACIA,IAC1BS,EAFsB,EAEtBA,gBAFsB,OAItB,oCACE,4BAAQC,KAAK,SAASC,KAAMb,EAAMc,QAASH,GACxCX,GAEH,4BAAQY,KAAK,SAASC,KAAMZ,EAASa,QAASH,GAC3CV,GAEH,4BAAQW,KAAK,SAASC,KAAMX,EAAKY,QAASH,GACvCT,KCVca,E,2MASnBC,MAAQ,CACNhB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPe,eAAiB,SAAAC,GAAM,IACbL,EAASK,EAAEC,OAAXN,KACR,EAAKO,UAAS,SAAAC,GAAS,sBACpBR,EAAOQ,EAAUR,GAAQ,O,EAI9BS,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKR,OAAOS,QAAO,SAACC,EAAKC,GAAN,OAAaD,EAAMC,M,EAG7DC,gCAAkC,WAChC,OAAkC,IAA9B,EAAKN,qBACA,KAEH,GAAN,QAAY,EAAKN,MAAMhB,KAAO,EAAKsB,qBAAwB,KAAKO,QAC9D,GADF,M,wEAKQ,IACAC,EAAUC,KAAKC,MAAfF,MADD,EAEwBC,KAAKf,MAA5BhB,EAFD,EAECA,KAAMC,EAFP,EAEOA,QAASC,EAFhB,EAEgBA,IACjBC,EAAQ4B,KAAKT,qBACbW,EAAgCF,KAAKH,kCAE3C,OACE,iCACE,4BAAKE,GACL,kBAAC,EAAD,CACEpB,QAAS,CAAEV,KAAM,OAAQC,QAAS,UAAWC,IAAK,OAClDS,gBAAiBoB,KAAKd,iBAEvBc,KAAKT,qBAAuB,EAC3B,kBAAC,EAAD,CACEtB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoB6B,IAGtB,+D,GAzD2BC,aAAhBnB,EACZjB,aAAe,CACpBgC,MAAO,yBCJX,IAMeK,EANE,kBACf,oCACE,kBAAC,EAAD,QCIWC,EANH,kBACV,oCACE,kBAAC,EAAD,QCDJC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCHjDC,EAAOC,QAAU,CAAC,KAAO,4B","file":"static/js/main.5b85830c.chunk.js","sourcesContent":["import React from 'react';\nimport T from 'prop-types';\n\nconst Statistic = ({ label, value }) => <li>{`${label}: ${value}`}</li>;\n\nStatistic.defaultProps = {\n  value: 0,\n};\n\nStatistic.propTypes = {\n  label: T.string.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  value: T.any,\n};\n\nexport default Statistic;\n","import React from 'react';\nimport T from 'prop-types';\nimport Statistic from './Statistic';\nimport styles from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <>\n    <h2>Statistics</h2>\n    <ul className={styles.list}>\n      <Statistic label=\"Good\" value={good} />\n      <Statistic label=\"Neutral\" value={neutral} />\n      <Statistic label=\"Bad\" value={bad} />\n      <Statistic label=\"Total\" value={total} />\n      <Statistic\n        label=\"Positive feedback\"\n        value={positivePercentage}\n        persents\n      />\n    </ul>\n  </>\n);\n\nStatistics.propTypes = {\n  good: T.number.isRequired,\n  neutral: T.number.isRequired,\n  bad: T.number.isRequired,\n  total: T.number.isRequired,\n  positivePercentage: T.string.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport T from 'prop-types';\n\nconst FeedbackOptions = ({\n  options: { good, neutral, bad },\n  onLeaveFeedback,\n}) => (\n  <>\n    <button type=\"button\" name={good} onClick={onLeaveFeedback}>\n      {good}\n    </button>\n    <button type=\"button\" name={neutral} onClick={onLeaveFeedback}>\n      {neutral}\n    </button>\n    <button type=\"button\" name={bad} onClick={onLeaveFeedback}>\n      {bad}\n    </button>\n  </>\n);\n\nFeedbackOptions.propTypes = {\n  options: T.objectOf(T.string).isRequired,\n  onLeaveFeedback: T.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React, { Component } from 'react';\nimport T from 'prop-types';\nimport Statistics from '../Statistics/Statistics';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\n\nexport default class Section extends Component {\n  static defaultProps = {\n    title: 'Please leave feedback',\n  };\n\n  static propTypes = {\n    title: T.string,\n  };\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countFeedbacks = e => {\n    const { name } = e.target;\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, el) => acc + el);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    if (this.countTotalFeedback() === 0) {\n      return '0%';\n    }\n    return `${((this.state.good / this.countTotalFeedback()) * 100).toFixed(\n      0,\n    )}%`;\n  };\n\n  render() {\n    const { title } = this.props;\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const percentageOfPositiveFeedbacks = this.countPositiveFeedbackPercentage();\n\n    return (\n      <section>\n        <h2>{title}</h2>\n        <FeedbackOptions\n          options={{ good: 'good', neutral: 'neutral', bad: 'bad' }}\n          onLeaveFeedback={this.countFeedbacks}\n        />\n        {this.countTotalFeedback() > 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={percentageOfPositiveFeedbacks}\n          />\n        ) : (\n          <p>No feedback given. Rate us!</p>\n        )}\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport Section from './Section/Section';\n\nconst Feedback = () => (\n  <>\n    <Section />\n  </>\n);\n\nexport default Feedback;\n","import React from 'react';\nimport Feedback from './Feedback/Feedback';\n\nconst App = () => (\n  <>\n    <Feedback />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__ddrG-\"};"],"sourceRoot":""}